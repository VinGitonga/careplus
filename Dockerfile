# Stage 1: Base image
FROM node:22-alpine AS base

# Stage 2: Install dependencies
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install Yarn globally (if needed)
RUN npm install -g --force yarn@1.22.19

# Copy package.json and yarn.lock
COPY package.json yarn.lock ./

# Install dependencies
RUN yarn install --frozen-lockfile

# Stage 3: Build the application
FROM base AS builder
WORKDIR /app

# Copy node_modules from the deps stage
COPY --from=deps /app/node_modules ./node_modules

# Copy the rest of the application code
COPY . .

# Build the Nuxt.js application
RUN yarn build

# Stage 4: Production image
FROM base AS runner
WORKDIR /app

# Set environment variables
ENV NODE_ENV production

# Create a non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nuxtjs

# Copy the public folder (if it exists)
COPY --from=builder /app/public ./public

# Copy the .output folder generated by Nuxt.js
COPY --from=builder --chown=nuxtjs:nodejs /app/.output ./.output

# Set permissions for the .output folder
RUN chown -R nuxtjs:nodejs ./.output

# Switch to the non-root user
USER nuxtjs

# Expose the port
EXPOSE 3000

# Set the host and port for Nuxt.js
ENV HOST 0.0.0.0
ENV PORT 3000

# Start the application
CMD ["node", ".output/server/index.mjs"]